name: Release

on:
  push:
    tags:
      - 'v*'

# Add permissions block to fix "Resource not accessible by integration" error
permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    name: Build and Upload for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: screen-region-share
            asset_name: screen-region-share-linux-amd64
            dependencies: libxcb-shape0-dev libxcb-xfixes0-dev libxdo-dev libx11-dev
          - os: windows-latest
            artifact_name: screen-region-share.exe
            asset_name: screen-region-share-windows-amd64.exe
          - os: macos-latest
            artifact_name: screen-region-share
            asset_name: screen-region-share-macos-x86_64
            target: x86_64-apple-darwin
          - os: macos-latest
            artifact_name: screen-region-share
            asset_name: screen-region-share-macos-arm64
            target: aarch64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y ${{ matrix.dependencies }}

      - name: Build for release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release ${{ matrix.target && format('--target {0}', matrix.target) || '' }}

      - name: Prepare asset path
        id: prepare-asset
        shell: bash
        run: |
          if [ -n "${{ matrix.target }}" ]; then
            echo "::set-output name=asset_path::./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}"
          else
            echo "::set-output name=asset_path::./target/release/${{ matrix.artifact_name }}"
          fi

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.prepare-asset.outputs.asset_path }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream