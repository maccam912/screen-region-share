name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-windows:
    name: Build Windows (${{ matrix.arch }})
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        include:
          - arch: x86_64
            target: x86_64-pc-windows-msvc
          - arch: aarch64
            target: aarch64-pc-windows-msvc
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir release-artifacts
          cp target/${{ matrix.target }}/release/screen-region-share.exe release-artifacts/screen-region-share-${{ matrix.arch }}-windows.exe
      
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release-artifacts/screen-region-share-${{ matrix.arch }}-windows.exe
          asset_name: screen-region-share-${{ matrix.arch }}-windows.exe
          tag: ${{ github.ref }}

  build-macos:
    name: Build macOS (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
        include:
          - arch: x86_64
            target: x86_64-apple-darwin
          - arch: aarch64
            target: aarch64-apple-darwin
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir -p release-artifacts
          cp target/${{ matrix.target }}/release/screen-region-share release-artifacts/screen-region-share-${{ matrix.arch }}-macos
      
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release-artifacts/screen-region-share-${{ matrix.arch }}-macos
          asset_name: screen-region-share-${{ matrix.arch }}-macos
          tag: ${{ github.ref }}